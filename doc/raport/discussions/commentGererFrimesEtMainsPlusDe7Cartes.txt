Ce qu'il faudrait changer pour supporter les frimes.
Notre compréhension de l'énoncé du laboratoire impliquait que nous devions gérer les frimes. C'est ce que nous avons fait. Nous allons expliquer comment nous sommes arrivés à traiter les frimes. Conceptuellement, nous avons représenter la frime comme étant une carte composée d'une dénomination frime et d'une couleur frime. Une carte identifié comme dit précédemment peut facilement être détecté dans les algorithmes de comparaison des rangs. Étant donné que nous utilisons un conteneur "multiset" pour stocker nos cartes, la carte joker allait devoir elle aussi se faire trier. Elle représente donc la plus haute carte du jeu bien qu'elle n'aie pas de valeur définie puisqu'il s'agit de la carte la plus pratique du jeu.

Initialement, nous ne prenions pas en compte les frimes, nous les avons pris en charge seulement en dernier. Il a été nécessaire de modifier une partie non négligeable de notre code pour gérer ces jokers. Tous nos algorithmes de comparaisons des rangs doivent compter le nombre de jokers présents dans la main. Pour cela, nous utilisons la fonction "compterNombreDenominations" qui nous fournie cette information. En sachant le nombre de jokers dans la main, un traitement est effectué pour prendre en compte que certaines suites ou combinaisons de même dénominations peuvent être complétés avec l'ajout de joker.

La prise en charge des frimes dans nos classes de notre logiciel a quelques points à améliorer. Le premier est minime puisqu'il aurait fallu quelques lignes de code pour régler le problème. Le constructeur de carte prend en paramètre une dénomination et une couleur. Cependant, ce constructeur ne valide pas les dénominations et les couleurs passées en argument. Cela met en jeu la cohérence des cartes ajoutées dans la main. En effet, on pourrait passer au constructeur une dénomination joker et une couleur autre que joker. Il s'agit même de ce qui était arriver dans nos tests unitaires, l'utilisation du copier-coller de cas tests où l'on a remplacé que la dénomination orinale de la carte par celle du joker nous a permit de mettre en lumière ce problème. Il aurait fallu interdire dans le constructeur, les dénominations et les couleurs joker et d'obliger dans le cas du joker d'utiliser la constante statique définie à cet effet.

Ce qu'il faudrait pour prendre en charge les mains à sept cartes.
Nous avions compris que nous ne devions pas gérer un nombre fixe de cartes. Cela nous a donc mené indirectement à orienter notre conception et notre implémentation afin de prendre en charge les mains à sept cartes. Il s'agissait d'une difficulté supplémentaire et nos algorithme on du être plus complexes. En effet, pour les quintes par exemple, établir quelle est la quinte est relativement facile, mais établir quelle est la meilleure quinte l'est moins puisque plusieurs quintes sont possible dans une main de plus de 9 cartes.
