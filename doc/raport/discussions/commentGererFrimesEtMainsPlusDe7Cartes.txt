Ce qu'il faudrait changer pour supporter les frimes.
Notre compréhension de l'énoncé du laboratoire était que nous devions gérer les frimes. Nous allons donc expliquer comment nous avons fait pou les traiter.

Conceptuellement, nous avons représenté la frime comme étant une carte composée d'une dénomination « joker » et d'une couleur « joker ». Une carte identifiée comme tel peut facilement être détectée dans les algorithmes de comparaison des rangs. Étant donné que nous utilisons un conteneur « multiset » pour stocker nos cartes, la carte joker allait devoir elle aussi se faire trier. Elle représente donc la plus haute carte du jeu bien qu'elle n'aie pas de valeur définie puisqu'il s'agit de la carte la plus pratique du jeu.

Initialement, nous ne prenions pas en compte les frimes, nous les avons prises en charge seulement en dernier. Il a été nécessaire de modifier une partie non négligeable de notre code pour les gérer. Tous nos algorithmes de comparaisons des rangs doivent compter le nombre de jokers présents dans la main. Pour cela, nous avons souvent utilisé la fonction « compterNombreDenominations » qui nous fournie, entre autre, cette information. En sachant le nombre de jokers dans la main, un traitement est effectué pour prendre en compte que certaines suites ou combinaisons peuvent être complétées avec l'ajout de une ou plusieurs frimes.

La prise en charge des frimes dans les classes de notre bibliothèque a quelques points qui pourraient être amélioré. Le premier est minime, puisqu'il aurait fallu quelques lignes de code pour régler le problème. Le constructeur de la classe « Carte » prend en paramètre une dénomination et une couleur. Cependant, ce constructeur ne valide pas les dénominations et les couleurs passées en argument. Cela met en jeu la cohérence des cartes. En effet, on pourrait passer au constructeur une dénomination « joker » et une couleur autre que joker. Il s'agit même de ce qui était arriver dans nos tests unitaires, l'utilisation du copier-coller de cas tests où l'on a remplacé que la dénomination orinale de la carte par celle du joker nous a permit de mettre en lumière ce problème. Il aurait fallu interdire les dénominations et les couleurs « joker » dans le constructeur et obliger, pour obtenir un joker, d'utiliser la constante statique définie à cet effet.

Ce qu'il faudrait pour prendre en charge les mains à sept cartes.
Nous avions compris que nous ne devions pas gérer un nombre fixe de cartes. Cela nous a donc mené indirectement à orienter notre conception et notre implémentation afin de prendre en charge les mains à sept cartes. Il s'agissait d'une difficulté supplémentaire et nos algorithme on du être plus complexes. En effet, pour les quintes par exemple, établir quelle est la quinte est relativement facile, mais établir quelle est la meilleure quinte l'est moins puisque plusieurs quintes sont possible dans une main de plus de 9 cartes.
